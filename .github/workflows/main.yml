name: CICD

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  generate-version:
    runs-on: ubuntu-latest

    permissions:
      contents: write          

    steps:
      - uses: actions/checkout@v4

      - name: Github Tag Bump
        id: tab_bump
        uses: anothrNick/github-tag-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INITIAL_VERSION: 1.0.2
          DEFAULT_BUMP: patch

    outputs:
      new_version: ${{ steps.tab_bump.outputs.new_tag }}

  build-and-deploy-service:
    runs-on: ubuntu-latest
    needs: generate-version

    env:
      APP_NAME: playeconomy
      SERVICE_NAME: trading
      HELM_CHART_VERSION: 0.1.4

    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: Azure/login@v2
        with:
          client-id: ${{secrets.AZURE_CLIENT_ID}}
          tenant-id: ${{secrets.AZURE_TENANT_ID}}
          subscription-id: ${{secrets.AZURE_SUBSCRIPTION_ID}}

      - name: Login to container registry
        run: az acr login --name ${{ env.APP_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          tags: ${{env.APP_NAME}}.azurecr.io/trading:${{ needs.generate-version.outputs.new_version }}
          push: true

      - name: Get AKS Credentials
        run: az aks get-credentials --resource-group ${{ env.APP_NAME }} --name ${{ env.APP_NAME }}

      - name: Helm tool installer
        uses: Azure/setup-helm@v4

      - name: Login to Helm registry
        run: |
            helmUser="00000000-0000-0000-0000-000000000000"
            helmPassword=$(az acr login --name ${{ env.APP_NAME }} \
            --expose-token --output tsv --query accessToken)
            helm registry login ${{ env.APP_NAME }}.azurecr.io \
            --username $helmUser --password $helmPassword

      - name: Deploy Helm chart
        run: |
          helm upgrade \
          ${{env.SERVICE_NAME}}-service \
          oci://${{ env.APP_NAME }}.azurecr.io/helm/microservice \
          --version ${{env.HELM_CHART_VERSION}} \
          -f helm/values.yaml \
          -n ${{env.SERVICE_NAME}} \
          --set image.tag=${{needs.generate-version.outputs.new_version}} \
          --install \
          --create-namespace \
          --wait
